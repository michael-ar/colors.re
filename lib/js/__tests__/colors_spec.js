// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var Colors = require("../src/Colors.js");

describe("colors.re", (function () {
        Jest.test("colors should not modify by default", (function () {
                return Jest.ExpectJs[/* toBe */2]("start", Jest.ExpectJs[/* expect */0](Colors.colors(/* None */0, /* None */0, /* None */0, /* None */0, "start")));
              }));
        Jest.test("colors should apply modifiers", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[1m' + 'start' + '\u001b[22m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* None */0, /* None */0, /* Some */[/* Bold */1], /* None */0, "start")));
              }));
        Jest.test("colors should apply color Red", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[31m' + 'Red' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* Red */0], /* None */0, /* None */0, /* None */0, "Red")));
              }));
        Jest.test("colors should apply color Yellow", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[33m' + 'Yellow' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* Yellow */1], /* None */0, /* None */0, /* None */0, "Yellow")));
              }));
        Jest.test("colors should apply color Green", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[32m' + 'Green' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* Green */2], /* None */0, /* None */0, /* None */0, "Green")));
              }));
        Jest.test("colors should apply color Blue", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[34m' + 'Blue' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* Blue */3], /* None */0, /* None */0, /* None */0, "Blue")));
              }));
        Jest.test("colors should apply color White", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[37m' + 'White' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* White */4], /* None */0, /* None */0, /* None */0, "White")));
              }));
        Jest.test("colors should apply color Cyan", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[36m' + 'Cyan' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* Cyan */5], /* None */0, /* None */0, /* None */0, "Cyan")));
              }));
        Jest.test("colors should apply color Magenta", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[35m' + 'Magenta' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* Magenta */6], /* None */0, /* None */0, /* None */0, "Magenta")));
              }));
        Jest.test("colors should apply color BgBlack", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[40m' + 'BgBlack' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgBlack */7], /* None */0, /* None */0, /* None */0, "BgBlack")));
              }));
        Jest.test("colors should apply color BgRed", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[41m' + 'BgRed' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgRed */8], /* None */0, /* None */0, /* None */0, "BgRed")));
              }));
        Jest.test("colors should apply color BgGreen", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[42m' + 'BgGreen' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgGreen */9], /* None */0, /* None */0, /* None */0, "BgGreen")));
              }));
        Jest.test("colors should apply color BgYellow", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[43m' + 'BgYellow' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgYellow */10], /* None */0, /* None */0, /* None */0, "BgYellow")));
              }));
        Jest.test("colors should apply color BgBlue", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[44m' + 'BgBlue' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgBlue */11], /* None */0, /* None */0, /* None */0, "BgBlue")));
              }));
        Jest.test("colors should apply color BgMagenta", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[45m' + 'BgMagenta' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgMagenta */12], /* None */0, /* None */0, /* None */0, "BgMagenta")));
              }));
        Jest.test("colors should apply color BgCyan", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[46m' + 'BgCyan' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgCyan */13], /* None */0, /* None */0, /* None */0, "BgCyan")));
              }));
        Jest.test("colors should apply color BgWhite", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[47m' + 'BgWhite' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgWhite */14], /* None */0, /* None */0, /* None */0, "BgWhite")));
              }));
        Jest.test("colors should apply color BgRedBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[101m' + 'BgRedBright' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgRedBright */15], /* None */0, /* None */0, /* None */0, "BgRedBright")));
              }));
        Jest.test("colors should apply color BgGreenBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[102m' + 'BgGreenBright' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgGreenBright */16], /* None */0, /* None */0, /* None */0, "BgGreenBright")));
              }));
        Jest.test("colors should apply color BgYellowBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[103m' + 'BgYellowBright' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgYellowBright */17], /* None */0, /* None */0, /* None */0, "BgYellowBright")));
              }));
        Jest.test("colors should apply color BgBlueBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[104m' + 'BgBlueBright' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgBlueBright */18], /* None */0, /* None */0, /* None */0, "BgBlueBright")));
              }));
        Jest.test("colors should apply color BgMagentaBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[105m' + 'BgMagentaBright' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgMagentaBright */19], /* None */0, /* None */0, /* None */0, "BgMagentaBright")));
              }));
        Jest.test("colors should apply color BgCyanBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[106m' + 'BgCyanBright' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgCyanBright */20], /* None */0, /* None */0, /* None */0, "BgCyanBright")));
              }));
        Jest.test("colors should apply color BgWhiteBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[107m' + 'BgWhiteBright' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* BgWhiteBright */21], /* None */0, /* None */0, /* None */0, "BgWhiteBright")));
              }));
        Jest.test("colors should apply backgrounds", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[41m' + 'start' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* None */0, /* Some */[/* BgRed */8], /* None */0, /* None */0, "start")));
              }));
        Jest.test("colors should hightlight keyword", (function () {
                return Jest.ExpectJs[/* toBe */2](( 'Hello ' + '\u001b[32m' + 'World' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* None */0, /* None */0, /* None */0, /* Some */[/* record */[
                                      /* colorType : Green */2,
                                      /* word */"World"
                                    ]], "Hello World")));
              }));
        return Jest.test("colors should apply multiple changes to a string", (function () {
                      return Jest.ExpectJs[/* toBe */2](( '\u001b[41m' + '\u001b[34m' + 'start' + '\u001b[39m' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Colors.colors(/* Some */[/* Blue */3], /* Some */[/* BgRed */8], /* None */0, /* None */0, "start")));
                    }));
      }));

/*  Not a pure module */
