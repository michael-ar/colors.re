// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ColorsUtils = require("../src/ColorsUtils.js");

describe("colors.re ColorsUtils and Styles", (function () {
        Jest.test("startWrap", (function () {
                return Jest.ExpectJs[/* toBe */2]("\u001b[start" + "m", Jest.ExpectJs[/* expect */0](ColorsUtils.startWrap("start")));
              }));
        Jest.test("endWrap", (function () {
                return Jest.ExpectJs[/* toBe */2]("\u001b[end" + "m", Jest.ExpectJs[/* expect */0](ColorsUtils.endWrap("end")));
              }));
        Jest.test("bold", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[1m' + 'bold' + '\u001b[22m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bold */3], "bold")));
              }));
        Jest.test("italic", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[3m' + 'test' + '\u001b[23m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* italic */5], "test")));
              }));
        Jest.test("underline", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[4m' + 'test' + '\u001b[24m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* underline */6], "test")));
              }));
        Jest.test("inverse", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[7m' + 'test' + '\u001b[27m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* inverse */7], "test")));
              }));
        Jest.test("hidden", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[8m' + 'test' + '\u001b[28m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* hidden */8], "test")));
              }));
        Jest.test("strikethrough", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[9m' + 'test' + '\u001b[29m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* strikethrough */9], "test")));
              }));
        Jest.test("black", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[30m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* black */10], "test")));
              }));
        Jest.test("red", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[31m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* red */11], "test")));
              }));
        Jest.test("green", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[32m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* green */12], "test")));
              }));
        Jest.test("yellow", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[33m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* yellow */13], "test")));
              }));
        Jest.test("blue", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[34m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* blue */14], "test")));
              }));
        Jest.test("magenta", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[35m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* magenta */15], "test")));
              }));
        Jest.test("cyan", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[36m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* cyan */16], "test")));
              }));
        Jest.test("white", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[37m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* white */17], "test")));
              }));
        Jest.test("gray", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[90m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* gray */18], "test")));
              }));
        Jest.test("grey", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[90m' + 'test' + '\u001b[39m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* grey */19], "test")));
              }));
        Jest.test("bgBlack", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[40m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgBlack */20], "test")));
              }));
        Jest.test("bgRed", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[41m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgRed */21], "test")));
              }));
        Jest.test("bgGreen", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[42m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgGreen */22], "test")));
              }));
        Jest.test("bgYellow", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[43m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgYellow */23], "test")));
              }));
        Jest.test("bgBlue", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[44m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgBlue */24], "test")));
              }));
        Jest.test("bgMagenta", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[45m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgMagenta */25], "test")));
              }));
        Jest.test("bgCyan", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[46m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgCyan */26], "test")));
              }));
        Jest.test("bgWhite", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[47m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgWhite */27], "test")));
              }));
        Jest.test("bgBlackBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[100m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgBlackBright */28], "test")));
              }));
        Jest.test("bgRedBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[101m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgRedBright */29], "test")));
              }));
        Jest.test("bgGreenBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[102m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgGreenBright */30], "test")));
              }));
        Jest.test("bgYellowBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[103m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgYellowBright */31], "test")));
              }));
        Jest.test("bgBlueBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[104m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgBlueBright */32], "test")));
              }));
        Jest.test("bgMagentaBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[105m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgMagentaBright */33], "test")));
              }));
        Jest.test("bgCyanBright", (function () {
                return Jest.ExpectJs[/* toBe */2](( '\u001b[106m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgCyanBright */34], "test")));
              }));
        return Jest.test("bgWhiteBright", (function () {
                      return Jest.ExpectJs[/* toBe */2](( '\u001b[107m' + 'test' + '\u001b[49m' ), Jest.ExpectJs[/* expect */0](Curry._1(ColorsUtils.ColorsUtils[/* bgWhiteBright */35], "test")));
                    }));
      }));

/*  Not a pure module */
