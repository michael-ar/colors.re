// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Utils = require("../src/Utils.js");

describe("colors.re Utils and Styles", (function () {
        Jest.test("startWrap", (function () {
                return Jest.ExpectJs[/* toBe */2]("\u001b[start" + "m", Jest.ExpectJs[/* expect */0](Utils.startWrap("start")));
              }));
        Jest.test("endWrap", (function () {
                return Jest.ExpectJs[/* toBe */2]("\u001b[end" + "m", Jest.ExpectJs[/* expect */0](Utils.endWrap("end")));
              }));
        Jest.test("bold", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("1") + ("bold" + Utils.endWrap("22")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bold */3], "bold")));
              }));
        Jest.test("italic", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("3") + ("test" + Utils.endWrap("23")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* italic */5], "test")));
              }));
        Jest.test("underline", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("4") + ("test" + Utils.endWrap("24")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* underline */6], "test")));
              }));
        Jest.test("inverse", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("7") + ("test" + Utils.endWrap("27")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* inverse */7], "test")));
              }));
        Jest.test("hidden", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("8") + ("test" + Utils.endWrap("28")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* hidden */8], "test")));
              }));
        Jest.test("strikethrough", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("9") + ("test" + Utils.endWrap("29")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* strikethrough */9], "test")));
              }));
        Jest.test("black", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("30") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* black */10], "test")));
              }));
        Jest.test("red", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("31") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* red */11], "test")));
              }));
        Jest.test("green", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("32") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* green */12], "test")));
              }));
        Jest.test("yellow", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("33") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* yellow */13], "test")));
              }));
        Jest.test("blue", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("34") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* blue */14], "test")));
              }));
        Jest.test("magenta", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("35") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* magenta */15], "test")));
              }));
        Jest.test("cyan", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("36") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* cyan */16], "test")));
              }));
        Jest.test("white", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("37") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* white */17], "test")));
              }));
        Jest.test("gray", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("90") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* gray */18], "test")));
              }));
        Jest.test("grey", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("90") + ("test" + Utils.endWrap("39")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* grey */19], "test")));
              }));
        Jest.test("bgBlack", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("40") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgBlack */20], "test")));
              }));
        Jest.test("bgRed", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("41") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgRed */21], "test")));
              }));
        Jest.test("bgGreen", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("42") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgGreen */22], "test")));
              }));
        Jest.test("bgYellow", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("43") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgYellow */23], "test")));
              }));
        Jest.test("bgBlue", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("44") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgBlue */24], "test")));
              }));
        Jest.test("bgMagenta", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("45") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgMagenta */25], "test")));
              }));
        Jest.test("bgCyan", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("46") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgCyan */26], "test")));
              }));
        Jest.test("bgWhite", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("47") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgWhite */27], "test")));
              }));
        Jest.test("bgBlackBright", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("100") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgBlackBright */28], "test")));
              }));
        Jest.test("bgRedBright", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("101") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgRedBright */29], "test")));
              }));
        Jest.test("bgGreenBright", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("102") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgGreenBright */30], "test")));
              }));
        Jest.test("bgYellowBright", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("103") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgYellowBright */31], "test")));
              }));
        Jest.test("bgBlueBright", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("104") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgBlueBright */32], "test")));
              }));
        Jest.test("bgMagentaBright", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("105") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgMagentaBright */33], "test")));
              }));
        Jest.test("bgCyanBright", (function () {
                return Jest.ExpectJs[/* toBe */2](Utils.startWrap("106") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgCyanBright */34], "test")));
              }));
        return Jest.test("bgWhiteBright", (function () {
                      return Jest.ExpectJs[/* toBe */2](Utils.startWrap("107") + ("test" + Utils.endWrap("49")), Jest.ExpectJs[/* expect */0](Curry._1(Utils.Utils[/* bgWhiteBright */35], "test")));
                    }));
      }));

/*  Not a pure module */
