// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Styles = require("./Styles.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function startWrap(v) {
  return "\u001b[" + (String(v) + "") + "m";
}

function endWrap(v) {
  return "\u001b[" + (String(v) + "") + "m";
}

function wrap(param) {
  var exit = 0;
  if (param) {
    var match = param[1];
    if (match) {
      if (match[1]) {
        exit = 1;
      } else {
        var last = match[0];
        var head = param[0];
        return (function (str) {
            return startWrap(head) + (str + endWrap(last));
          });
      }
    } else {
      exit = 1;
    }
  } else {
    exit = 1;
  }
  if (exit === 1) {
    throw [
          Caml_builtin_exceptions.match_failure,
          [
            "Utils.re",
            7,
            11
          ]
        ];
  }
  
}

function compose(f, g, x) {
  return Curry._1(f, Curry._1(g, x));
}

function pipe(f, g, x) {
  return Curry._1(g, Curry._1(f, x));
}

var reset = wrap(Styles.Styles[/* reset */0]);

var bold = wrap(Styles.Styles[/* bold */1]);

var dim = wrap(Styles.Styles[/* dim */2]);

var italic = wrap(Styles.Styles[/* italic */3]);

var underline = wrap(Styles.Styles[/* underline */4]);

var inverse = wrap(Styles.Styles[/* inverse */5]);

var hidden = wrap(Styles.Styles[/* hidden */6]);

var strikethrough = wrap(Styles.Styles[/* strikethrough */7]);

var black = wrap(Styles.Styles[/* black */8]);

var red = wrap(Styles.Styles[/* red */9]);

var green = wrap(Styles.Styles[/* green */10]);

var yellow = wrap(Styles.Styles[/* yellow */11]);

var blue = wrap(Styles.Styles[/* blue */12]);

var magenta = wrap(Styles.Styles[/* magenta */13]);

var cyan = wrap(Styles.Styles[/* cyan */14]);

var white = wrap(Styles.Styles[/* white */15]);

var gray = wrap(Styles.Styles[/* gray */16]);

var grey = wrap(Styles.Styles[/* grey */17]);

var bgBlack = wrap(Styles.Styles[/* bgBlack */18]);

var bgRed = wrap(Styles.Styles[/* bgRed */19]);

var bgGreen = wrap(Styles.Styles[/* bgGreen */20]);

var bgYellow = wrap(Styles.Styles[/* bgYellow */21]);

var bgBlue = wrap(Styles.Styles[/* bgBlue */22]);

var bgMagenta = wrap(Styles.Styles[/* bgMagenta */23]);

var bgCyan = wrap(Styles.Styles[/* bgCyan */24]);

var bgWhite = wrap(Styles.Styles[/* bgWhite */25]);

var bgBlackBright = wrap(Styles.Styles[/* bgBlackBright */26]);

var bgRedBright = wrap(Styles.Styles[/* bgRedBright */27]);

var bgGreenBright = wrap(Styles.Styles[/* bgGreenBright */28]);

var bgYellowBright = wrap(Styles.Styles[/* bgYellowBright */29]);

var bgBlueBright = wrap(Styles.Styles[/* bgBlueBright */30]);

var bgMagentaBright = wrap(Styles.Styles[/* bgMagentaBright */31]);

var bgCyanBright = wrap(Styles.Styles[/* bgCyanBright */32]);

var bgWhiteBright = wrap(Styles.Styles[/* bgWhiteBright */33]);

var Utils = /* module */[
  /* compose */compose,
  /* pipe */pipe,
  /* reset */reset,
  /* bold */bold,
  /* dim */dim,
  /* italic */italic,
  /* underline */underline,
  /* inverse */inverse,
  /* hidden */hidden,
  /* strikethrough */strikethrough,
  /* black */black,
  /* red */red,
  /* green */green,
  /* yellow */yellow,
  /* blue */blue,
  /* magenta */magenta,
  /* cyan */cyan,
  /* white */white,
  /* gray */gray,
  /* grey */grey,
  /* bgBlack */bgBlack,
  /* bgRed */bgRed,
  /* bgGreen */bgGreen,
  /* bgYellow */bgYellow,
  /* bgBlue */bgBlue,
  /* bgMagenta */bgMagenta,
  /* bgCyan */bgCyan,
  /* bgWhite */bgWhite,
  /* bgBlackBright */bgBlackBright,
  /* bgRedBright */bgRedBright,
  /* bgGreenBright */bgGreenBright,
  /* bgYellowBright */bgYellowBright,
  /* bgBlueBright */bgBlueBright,
  /* bgMagentaBright */bgMagentaBright,
  /* bgCyanBright */bgCyanBright,
  /* bgWhiteBright */bgWhiteBright
];

exports.startWrap = startWrap;
exports.endWrap = endWrap;
exports.wrap = wrap;
exports.Utils = Utils;
/* reset Not a pure module */
